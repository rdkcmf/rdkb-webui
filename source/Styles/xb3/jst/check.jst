<?%
/*
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:

 Copyright 2018 RDK Management

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
?>
<?% header('X-robots-tag: noindex,nofollow'); ?>


<?%
include('includes/jwt.jst');
 /*
 * Set the Locale for the Web UI based on the LANG setting or current linux locale
 */
$locale = getenv("LANG");
$locale = $locale ? $locale : "false";
if($locale != "false"){
        if(strstr($locale, 'it')){
                $locale="it";
                $_SESSION['language'] = $locale;
        }
}
function sendError($code)
{
  echo('\
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\
  <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\
  <head>\
  <input type="hidden" name="loc" id="loc" value='+$locale+'>\
      <link rel="stylesheet" type="text/css" media="screen" href="./cmn/css/common-min.css" />\
      <!--Character Encoding-->\
      <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />\
      <script type="text/javascript" src="./cmn/js/lib/jquery-1.9.1.js"></script>\
      <script type="text/javascript" src="./cmn/js/lib/jquery-migrate-1.2.1.js"></script>\
      <script type="text/javascript" src="./cmn/js/lib/jquery.alerts.js"></script>\
      <script src="./locale/CLDRPluralRuleParser.js"></script>\
	<script src="./locale/jquery.i18n.js"></script>\
	<script src="./locale/jquery.i18n.messagestore.js"></script>\
	<script src="./locale/jquery.i18n.fallbacks.js"></script>\
	<script src="./locale/jquery.i18n.language.js"></script>\
	<script src="./locale/jquery.i18n.parser.js"></script>\
	<script src="./locale/jquery.i18n.emitter.js"></script>\
	<script src="./locale/jquery.i18n.emitter.bidi.js"></script>\
	<script src="./locale/global.js"></script>\
	<script type="text/javascript">\
	var locale=document.getElementById("loc").value;\
	$.i18n().locale = locale;\
 	$.i18n().load( {\
                        it: {\
				"Access denied!":"Accesso negato",\
				"You have ":"Sono stati effettuati ",\
				" failed login attempts and your account will be locked for ":" tentativi di accesso non riusciti: il tuo account sarà bloccato per ",\
				" minutes":" minuti",\
				"Can not get password for mso from backend!":"Non è possibile ottenere la password per MSO da backend",\
				"Incorrect password for mso!":"Password errata per MSO",\
				"Incorrect password for admin!":"Password errata per l\'amministratore",\
				"You are using default password. Please change the password.":"Si sta utilizzando la password predefinita. Modificare la password.",\
				"Incorrect user name!":"Nome utente errato",\
				"Access level is none!":"Il livello di accesso è nessuno"\
                        }\
                });\
	</script>\
  </head>\
  ');
  echo($code);
}

$flag=0;
$flag_mso=0;
$passLockEnable = getStr("Device.UserInterface.PasswordLockoutEnable");
$failedAttempt=parseInt(getStr("Device.Users.User.3.NumOfFailedAttempts"));
$failedAttempt_mso=parseInt(getStr("Device.Users.User.1.NumOfFailedAttempts"));
$passLockoutAttempt=parseInt(getStr("Device.UserInterface.PasswordLockoutAttempts"));
$passLockoutTime=getStr("Device.UserInterface.PasswordLockoutTime");
$passLockoutTimeMins=$passLockoutTime/(1000*60);
$client_ip = $_SERVER["REMOTE_ADDR"];       // $client_ip="::ffff:10.0.0.101";
$server_ip = $_SERVER["SERVER_ADDR"];
$redirect_page = "https://"+$_SERVER["HTTP_HOST"] + $_SERVER["SCRIPT_NAME"];
$tokenendpoint = $clientid = $pStr = "";
$JWTdir = "/tmp/.jwt/";
$JWTfile = $JWTdir + "JWT.txt";
PHP_SESSION_ACTIVE = 2;

    if (isset($_POST["username"]))
    {
		/*=============================================*/
		// $dev_mode = true;
		/*if (file_exists("/var/ui_dev_mode")) {
			$_SESSION["timeout"] = 100000;
			if ($_POST["password"] == "dev") {
				if ($_POST["username"] == "mso") {
					header("location:at_a_glance.jst");
				}
				else if ($_POST["username"] == "admin") {
					header("location:at_a_glance.jst");
				}
				create_session();
				return;
			}
		}*/
		/*===============================================*/
        if ($_POST["username"] == "mso")
        {
            $authmode=getStr( "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.OAUTH.AuthMode" );
            if( $authmode != "sso" )
            {
                if( $authmode == "potd" || $_POST["password"] != "" )
                {
                    //triggering password validation in back end if "potd" or "mixed" and a password is supplied
                    $return_status = setStr("Device.Users.User.1.X_CISCO_COM_Password",$_POST["password"],true);
                    sleep(1);
                    $curPwd1 = getStr("Device.Users.User.1.X_CISCO_COM_Password");
                }
                else
                {
                    $curPwd1 = "Invalid_PWD";    // trigger SSO login attempt
                }
            }
            else
            {
                $curPwd1 = "Invalid_PWD";    // trigger SSO login attempt
            }
            if ( innerIP($client_ip) || (if_type($server_ip)=="rg_ip") )
            {
                if($passLockEnable == "true")
                {
                    if($failedAttempt_mso<$passLockoutAttempt){
                        $failedAttempt_mso=$failedAttempt_mso+1;
                        setStr("Device.Users.User.1.NumOfFailedAttempts",$failedAttempt_mso.toString(),true);
                     }

                     if($failedAttempt_mso==$passLockoutAttempt){
                         $flag_mso=1;
			 sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	

                     }
                }
                if($flag_mso==0){
                    session_destroy();
                    sendError('<script type="text/javascript"> alert($.i18n("Access denied!")); history.back(); </script>');
                }
            }
            else if ($curPwd1 == "Good_PWD" && $return_status)
            {
                if(($passLockEnable == "true") && ($failedAttempt_mso==$passLockoutAttempt)){
                    $flag_mso=1;
		    sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	

                }
                else{
                    $failedAttempt_mso=0;
                    setStr("Device.Users.User.1.NumOfFailedAttempts",$failedAttempt_mso.toString(),true);
                    exec("/usr/bin/logger -t GUI -p local5.notice 'User:mso login'");
                    header("location:at_a_glance.jst");
		            create_session();
                }
            }
            else if ("" == $curPwd1)
            {
                session_destroy();
                sendError('<script type="text/javascript"> alert($.i18n("Can not get password for mso from backend!")); history.back(); </script>');
            }
            else
            {
                $authendpoint=getStr( "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.OAUTH.ServerUrl" );
                $clientid=getStr( "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.OAUTH.ClientId" );
                if( $authmode != "potd" && $authendpoint && $clientid )
                {
                    if (!isset($_GET['code']))
                    {
                        create_session();
                        $auth_url = getAuthenticationUrl( $clientid, $authendpoint, $redirect_page );
                        sendError("<script type='text/javascript'>document.location.href='"+$auth_url+"';</script>");
                        die("Please wait ...");
                    }
                }
                else
                {
                    if($passLockEnable == "true"){

                        if($failedAttempt_mso<$passLockoutAttempt){
                            $failedAttempt_mso=$failedAttempt_mso+1;
                            setStr("Device.Users.User.1.NumOfFailedAttempts",$failedAttempt_mso.toString(),true);
                        }

                        if($failedAttempt_mso==$passLockoutAttempt){
                            $flag_mso=1;
			    sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	

                        }
                    }

                    if($flag_mso==0){
                        session_destroy();
                        sendError('<script type="text/javascript"> alert($.i18n("Incorrect password for mso!")); history.back(); </script>');
                    }
                }
            }
        }
        else if ($_POST["username"] == "admin")
		{
			$return_status = setStr("Device.Users.User.3.X_RDKCENTRAL-COM_ComparePassword",$_POST["password"],true);
			sleep(1);
			$passVal= getStr("Device.Users.User.3.X_RDKCENTRAL-COM_ComparePassword");
			if(!$return_status) $passVal = "Invalid_PWD";
			if ( !innerIP($client_ip) && (if_type($server_ip)!="rg_ip") )
				{
					if($passLockEnable == "true"){
							if($failedAttempt<$passLockoutAttempt){
								$failedAttempt=$failedAttempt+1;
								setStr("Device.Users.User.3.NumOfFailedAttempts",$failedAttempt.toString(),true);
							}
							if($failedAttempt==$passLockoutAttempt){
								$flag=1;
								sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	
							}
					}
					if($flag==0){
						session_destroy();
						sendError( '<script type="text/javascript"> alert($.i18n("Access denied!")); history.back(); </script>');
					}
				}
				else if($passVal=="Invalid_PWD"){

					setStr("Device.DeviceInfo.X_RDKCENTRAL-COM_UI_ACCESS","ui_failed",true);
					session_destroy();
					if($passLockEnable == "true"){
						if($failedAttempt<$passLockoutAttempt){
						$failedAttempt=$failedAttempt+1;
						setStr("Device.Users.User.3.NumOfFailedAttempts",$failedAttempt.toString(),true);
						}
						if($failedAttempt==$passLockoutAttempt){
							$flag=1;
							sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	
						}
					}
					if($flag==0){
						session_destroy();
						sendError( '<script type="text/javascript"> alert($.i18n("Incorrect password for admin!"));history.back(); </script>');
					}
				}
				else
				{
					if(($passLockEnable == "true") && ($failedAttempt==$passLockoutAttempt)){
							$flag=1;
							sendError('<script type="text/javascript"> alert($.i18n("You have ")+"'+$passLockoutAttempt+'"+$.i18n(" failed login attempts and your account will be locked for ")+"'+$passLockoutTimeMins+'"+$.i18n(" minutes"));history.back();</script>');	
					}else{
						$failedAttempt=0;
						setStr("Device.Users.User.3.NumOfFailedAttempts",$failedAttempt.toString(),true);
						exec("/usr/bin/logger -t GUI -p local5.notice 'User:admin login'");
						setStr("Device.DeviceInfo.X_RDKCENTRAL-COM_UI_ACCESS","ui_success",true);
						if($passVal=="Default_PWD"){
							create_session();
							$_SESSION["password_change"] = "default_pwd";
							sendError( '<script type="text/javascript"> \
                                jAlert($.i18n("You are using default password. Please change the password."), "Alert", \
                                function (ret) { \
                                    if(ret) \
                                        { \
                                            window.location = "admin_password_change.jst"; \
                                        } \
                                }); \
                            </script>') ;
						}else{
							header("location:at_a_glance.jst");
							create_session();
						}
					}
				}
		}
        else
        {
		    setStr("Device.DeviceInfo.X_RDKCENTRAL-COM_UI_ACCESS","ui_failed",true);
            if( session_status() == PHP_SESSION_ACTIVE )
            {
                session_destroy();
            }
            sendError( '<script type="text/javascript"> alert($.i18n("Incorrect user name!")); history.back(); </script>');
        }
    }
    else
    {
        var $response = "";
        if (isset($_GET['code']))
        {
            $clientid=getStr( "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.OAUTH.ClientId" );
            $tokenendpoint=getStr( "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.OAUTH.TokenEndpoint" );
            $pStr = 'code=' + $_GET['code'] + '&' + 'redirect_uri=' + $redirect_page; //$params = {'code':$_GET['code'], 'redirect_uri':$redirect_page};
            if( file_exists( $JWTdir ) || exec("mkdir "+$JWTdir) )
            {
                $retval = getJWT( $tokenendpoint, $clientid, $pStr, $JWTfile ); //$response = $client->getAccessToken($tokenendpoint, 'authorization_code', $params);
            }
            else
            {
                $retval = 15;
            }
            if( $retval == 0 && file_exists( $JWTfile ) )
            {
                $response = file_get_contents( $JWTfile );
                //array_map( 'unlink', glob( $JWTdir . "*" ) );    //delete everything in directory
                remove_directory_contents($JWTdir);
                exec("rmdir "+$JWTdir);
            }

            if( isset( $response ) && $response ) // if( isset($response['result']['access_token']) )
            {
                $tokenvalid = false;
                $response = trim( $response, "{}" );
                $response = $response.split('"').join('');
                $response = str_replace( '{', '', $response);
                $response = str_replace( '}', '', $response);
                $token = {};
                $arr = explode( ',', $response);
                for ( $k in $arr ) {
                    $pair = $arr[$k];
                    list = {};
                    list = explode( ':', $pair, 2 );
                    $token[list[0]] = list[1];
                }
                if( isset( $token['access_token'] ) )
                {
                    $tokenvalid = VerifyToken( $token['access_token'], $clientid );
                }
                if( $tokenvalid == true )
                {
                    $failedAttempt_mso=0;
                    setStr("Device.Users.User.1.NumOfFailedAttempts",$failedAttempt_mso.toString(),true);
                    exec("/usr/bin/logger -t GUI -p local5.notice 'User:mso login'");
                    header("location:at_a_glance.jst");
                }
                else
                {
                    setStr("Device.DeviceInfo.X_RDKCENTRAL-COM_UI_ACCESS","token_failed",true);
                    if( session_status() == PHP_SESSION_ACTIVE )
                    {
                        session_destroy();
                    }
                    sendError( '<script type="text/javascript"> alert($.i18n("Access level is none!")); history.back(); </script>');
                }
            }
            else
            {
                setStr("Device.DeviceInfo.X_RDKCENTRAL-COM_UI_ACCESS","token_fetch",true);
                if( session_status() == PHP_SESSION_ACTIVE )
                {
                    session_destroy();
                }
                if(($response!="") && isset($response['result']['error_description']) && isset($response['code']) )
                {
                    $outstr = $response['code'] + " " + $response['result']['error_description'];
                    sendError( '<script type="text/javascript"> alert("'+$outstr+'"); history.back(); </script>');
                }
                else
                {
		    sendError('<script type="text/javascript"> alert($.i18n("Access Denied, Unknown Error")); history.back(); </script>');
                }
            }
        }
    }
	function innerIP($client_ip){		//for compatibility, $client_ip is not used
		$out		= [];
		$tmp		= [];
		$lan_ip		= [];
		$lxc_check	= [];
		$status		= 1;
		$server_ip	= parseIP($_SERVER["SERVER_ADDR"]);
		$bin = exec("which ifconfig");
		$xbin=$bin[0].replace(/ /g,'').replace(/\n/g,'');
		exec('grep -a container=lxc /proc/1/environ', $lxc_check, $status);//use eth0 if webserver is running in lxc
		if (0==$status && $_POST["username"] == "admin") {
			$out = exec($xbin+" eth0");
		} else {
			$out = exec($xbin+" brlan0");
		}
		for($k in $out){
      			$v = $out[$k];
			if (strpos($v, 'inet addr')){
				$tmp = explode('Bcast', $v);
				$tmp = explode('addr:', $tmp[0]);
				$lan_ip.push(trim($tmp[1]));
			}
			else if (strpos($v, 'inet6 addr')){
				$tmp = explode('Scope', $v);
				$tmp = explode('addr:', $tmp[0]);
				$tmp = explode('%', $tmp[1]);
				$tmp = explode('/', $tmp[0]);
				$lan_ip.push(trim($tmp[0]));
			}
		}
		return in_array($server_ip, $lan_ip);
	}
	function get_ips($if_name){
		$out = [];
		$tmp = [];
		$ret = [];
		$bin = exec("which ip");
		$xbin=$bin[0].replace(/ /g,'').replace(/\n/g,'');
		$out = exec($xbin+" addr show "+$if_name);
		for ($k in $out){
      			$v = $out[$k];
			if (strstr($v, 'inet')){
				$tmp = explode('/', $v);
				$tmp = explode(' ', $tmp[0]);
				$ret.push(trim($tmp.pop()));
			}
		}
		return $ret;
	}
	function if_type($ip_addr){
		var $tmp;
		$lxc_check = [];
		$status = 1;
		$lan_ip	= get_ips("brlan0");
		exec('grep -a container=lxc /proc/1/environ', $lxc_check, $status);//use eth0 if webserver is running in lxc
		if (0==$status) {
			$cm_ip  = get_ips("eth0");
		} else {
			$cm_ip  = get_ips("wan0");
		}
    		$ip_addr = parseIP($ip_addr);
		if (in_array($ip_addr, $lan_ip)){
			return "lan_ip";
		}
		else if (in_array($ip_addr, $cm_ip)){
			return "cm_ip";
		}
		else{
			return "rg_ip";
		}
		// print_r($lan_ip);
		// print_r($cm_ip);
	}
	function create_session(){
		session_start();
                $modelName= getStr("Device.DeviceInfo.ModelName");
                if (($modelName != "CGM4140COM") && ($modelName != "CGM4331COM") && ($modelName != "TG1682G")) { 
                    // session IP binding
                    if (!isset($_SESSION['PREV_REMOTEADDR'])) {
                        //session_regenerate_id();
                        $_SESSION['PREV_REMOTEADDR'] = $_SERVER['REMOTE_ADDR'];
                    }
                    $curr_sessID = session_id();
                    $curr_IP = $_SERVER['REMOTE_ADDR'];
                    exec("/usr/bin/logger -t GUI -p local5.notice \"Webui: session'" + $curr_sessID + "' is open from '" + $curr_IP + "' \" ");
                    if ($_SERVER['REMOTE_ADDR'] != $_SESSION['PREV_REMOTEADDR']) {
                        exec("/usr/bin/logger -t GUI -p local5.notice \"Webui: session'" + $curr_sessID + "' is closed \" ");
                        session_destroy(); // Destroy all data in session
                        echo( '<script type="text/javascript">alert("Please Login First!"); location.href="../index.jst";</script>');
                        exit(0);
                    }
                    if (!isset($_SESSION['PREV_SESSID'])) {
                        $_SESSION['PREV_SESSID'] = session_id();
                    }
                    
                    if ($curr_sessID != $_SESSION['PREV_SESSID']) {
                        exec("/usr/bin/logger -t GUI -p local5.notice \"Webui: session'" + $curr_sessID + "' is closed \" ");
                        session_destroy(); // Destroy all data in session
                        echo( '<script type="text/javascript">alert("Please Login First!"); location.href="../index.jst";</script>');
                        exit(0);
                    }
                }
                if ($modelName == "TG1682G") {
                    if (!isset($_SESSION['PREV_REMOTEADDR'])) {
                        if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {
                            $_SESSION['PREV_REMOTEADDR'] = $_SERVER['HTTP_X_FORWARDED_FOR'];
                        }
                        else
                        {
                            $_SESSION['PREV_REMOTEADDR'] = $_SERVER['REMOTE_ADDR'];
                        }
                    }
                    $curr_sessID = session_id();
                    if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {
                        $_SESSION['CURR_REMOTEADDR'] = $_SERVER['HTTP_X_FORWARDED_FOR'];
                    }
                    else
                    {
                        $_SESSION['CURR_REMOTEADDR'] = $_SERVER['REMOTE_ADDR'];
                    }
                    $curr_IP = $_SESSION['CURR_REMOTEADDR'];
                    exec("/bin/echo \"Webui: session'" + $curr_sessID + "' is open from '" + $curr_IP + "' \" >> /rdklogs/logs/Consolelog.txt.0");
                    if ($_SESSION['CURR_REMOTEADDR'] != $_SESSION['PREV_REMOTEADDR']) {
                        exec("/bin/echo \"Webui: session'" + $curr_sessID + "' is closed \" >> /rdklogs/logs/Consolelog.txt.0");
                        session_destroy(); // Destroy all data in session
                        echo( '<script type="text/javascript">alert("Please Login First!"); location.href="../index.jst";</script>');
                        exit(0);
                    }
                 }
        
		/*
		 * Set the Locale for the Web UI based on the LANG setting or current linux locale
		 */
		$locale = getenv("LANG");
		if($locale != false) {
		    if(!isset($_SESSION['language']) || exec("export LC_MESSAGES=0") != $locale){
		        //putenv("LANG=" . $locale);
		        exec("export LC_MESSAGES="+$locale);
		        exec("export LC_TIME="+$locale);
 
		        $domain = "rdkb";
		        bindtextdomain($domain, 'locales');
		        bind_textdomain_codeset($domain, 'UTF-8');
		        textdomain($domain);
		        $_SESSION['language'] = $locale; // set the default locale for future pages
		    }
		}
		//echo("You are logging...");
		$timeout_val 		= intval(getStr("Device.X_CISCO_COM_DeviceControl.WebUITimeout"));
		("" == $timeout_val) && ($timeout_val = 900);
		$_SESSION["timeout"]	= $timeout_val - 60;	//dmcli param is returning 900, GUI expects 840 - then GUI adds 60
		$_SESSION["sid"]	= session_id();
		$_SESSION["loginuser"]	= $_POST["username"];
	}

function getAuthenticationUrl( $client_id, $auth_endpoint, $redirect_uri )
{
    $parameters = {
        response_type:'code',
        client_id:$client_id,
        redirect_uri:$redirect_uri,
        'pfidpadapterid':"loginform"
    };
    return $auth_endpoint + '?' + http_build_query($parameters, null, '&');
}

/*
	function innerIP($client_ip)
	{
		if (strstr($client_ip, "192.168.100.") && ("bridge-static"==getStr("Device.X_CISCO_COM_DeviceControl.LanManagementEntry.1.LanMode")))
		{
			return true;
		}
		if (strpos($client_ip, "."))		//IPv4
		{
			$tmp0	= explode(":", $client_ip);
			$tmp1	= $tmp0.pop();
			$client	= explode(".", $tmp1);
			$lanip4	= explode(".", getStr("Device.X_CISCO_COM_DeviceControl.LanManagementEntry.1.LanIPAddress"));
			$lanmsk	= explode(".", getStr("Device.X_CISCO_COM_DeviceControl.LanManagementEntry.1.LanSubnetMask"));
			for (var $i=0; $i<4; $i++)
			{
				if ((parseInt($lanmsk[$i]&(int)$client[$i])) != (parseInt($lanmsk[$i]&parseInt($lanip4[$i]))))
				{
					return false;
				}
			}	
		}
		else
		{
			$prefix_dm	= getStr("Device.RouterAdvertisement.InterfaceSetting.1.Prefixes");
			$client		= explode(":", $client_ip);		
			$prefix		= explode(":", $prefix_dm);
			$prelen		= explode("/", $prefix_dm);
			$intlen		= intval($prelen.pop())/16;
			($intlen < 1) && ($intlen = 1);
			if (strtoupper($client[0]) != "FE80")
			{
				for (var $i=0; $i<$intlen; $i++)
				{
					if ($client[$i]!=$prefix[$i])
					{
						return false;
					}
				}
			}
		}
		return true;
	}
*/
?>
